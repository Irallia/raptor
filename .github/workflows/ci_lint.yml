name: Lint

on:
  pull_request_target:

env:
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eeuxo pipefail {0}

jobs:
  # Cancel other workflows that are dependent on this workflow by adding jobs that have the same concurrency group.
  cancel_linux:
    name: Cancel running Workflows
    concurrency:
      group: linux-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    steps:
      - name: "Cancel Linux"
        run: echo "Cancelling Linux"
  cancel_macos:
    name: Cancel running Workflows
    concurrency:
      group: macos-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    steps:
      - name: "Cancel macOS"
        run: echo "Cancelling macOS"
  cancel_misc:
    name: Cancel running Workflows
    concurrency:
      group: misc-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    steps:
      - name: "Cancel Misc"
        run: echo "Cancelling Misc"
  cancel_util:
    name: Cancel running Workflows
    concurrency:
      group: util-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    steps:
      - name: "Cancel Util"
        run: echo "Cancelling Util"
  cancel_coverage:
    name: Cancel running Workflows
    concurrency:
      group: coverage-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    steps:
      - name: "Cancel Coverage"
        run: echo "Cancelling Coverage"
  cancel_nextflow:
    name: Cancel running Workflows
    concurrency:
      group: workflows-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    runs-on: ubuntu-22.04
    steps:
      - name: "Cancel Nextflow"
        run: echo "Cancelling Nextflow"
  lint:
    name: Lint
    concurrency:
      group: lint-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    needs: [cancel_linux, cancel_macos, cancel_misc, cancel_util, cancel_coverage, cancel_nextflow]
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Add label
        env:
            GITHUB_TOKEN: ${{ secrets.SEQAN_ACTIONS_PAT }}
            PR_URL: ${{ github.event.pull_request.html_url }}
        run: gh pr edit $PR_URL --add-label "lint"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: "refs/pull/${{ github.event.number }}/merge"
          submodules: false
          token: ${{ secrets.SEQAN_ACTIONS_PAT }}

      - name: Get changed files
        id: changed_files
        run: |
          CPP_LIST=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} | \
          { grep -v -E "(lib/)" || test $? = 1; } | \
          { grep -E "(\.cpp|\.hpp)$" || test $? = 1; } | xargs)
          echo "cpp_list=$CPP_LIST" >> $GITHUB_OUTPUT

          CMAKE_LIST=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} | \
          { grep -v -E "(lib/)" || test $? = 1; } | \
          { grep -E "(\.cmake|CMakeLists.txt)$" || test $? = 1; } | xargs)
          echo "cmake_list=$CMAKE_LIST" >> $GITHUB_OUTPUT

      - name: Switch to fork
        run: |
          git remote add fork ${{ github.event.pull_request.head.repo.html_url }}
          git fetch fork ${{ github.event.pull_request.head.ref }}
          git checkout --force --track fork/${{ github.event.pull_request.head.ref }}

      - name: Run clang-format
        if: ${{ steps.changed_files.outputs.cpp_list }}
        uses: DoozyX/clang-format-lint-action@v0.15
        with:
          source: ${{ steps.changed_files.outputs.cpp_list }}
          clangFormatVersion: 15
          inplace: True

      - name: Run cmake-format
        if: ${{ steps.changed_files.outputs.cmake_list }}
        uses: PuneetMatharu/cmake-format-lint-action@v1.0.1
        with:
          args: --config-files .cmake-format.yaml --in-place

      - name: Import GPG key
        if: ${{ steps.changed_files.outputs.cpp_list }} || ${{ steps.changed_files.outputs.cmake_list }}
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.SEQAN_ACTIONS_GPG_KEY }}
          passphrase: ${{ secrets.SEQAN_ACTIONS_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Commit changes
        if: ${{ steps.changed_files.outputs.cpp_list }} || ${{ steps.changed_files.outputs.cmake_list }}
        run: |
          git config user.name "seqan-actions[bot]"
          git config user.email "seqan-actions@users.noreply.github.com"
          git add .
          git commit -m '[MISC] automatic linting' || true
          git push fork ${{ github.event.pull_request.head.ref }}

      # Wait for 5 seconds such that workflows triggered by adding the label run on the newest commit.
      - name: Defer workflow
        if: ${{ steps.changed_files.outputs.cpp_list }} || ${{ steps.changed_files.outputs.cmake_list }}
        run: sleep 5

      - name: Remove label
        env:
            GITHUB_TOKEN: ${{ secrets.SEQAN_ACTIONS_PAT }}
            PR_URL: ${{ github.event.pull_request.html_url }}
        run: gh pr edit $PR_URL --remove-label "lint"
